version = 3.0.0-RC3
# =========================================================
# General rules & Miscellanous
# =========================================================
preset = defaultWithAlign
maxColumn = 120
importSelectors = singleLine

## 	down:			Brings the environment down
.PHONY : down
down:
  @docker-compose -f stack/services.yaml down

## 	restart:		Restart the environment
.PHONY : restart
restart:
  @docker-compose -f stack/services.yaml restart -t 5

## 	start:			Start the environment
.PHONY : start
start:
  @docker-compose -f stack/services.yaml start

## 	stop:			Stop the environment
.PHONY : stop
stop:
  @docker-compose -f stack/services.yaml stop

## 	destroy:		Destroy all chat environment (containers, images, etc...)
.PHONY : destroy
destroy:
  @docker-compose -f stack/services.yaml down --rmi all

## 	status:			Status of the environment
.PHONY : status
status:
  @docker-compose -f stack/services.yaml ps

## 	logs:			Show logs for specific container
.PHONY : logs
logs:
  $(info >> Running: Logs for $(logargs))
@docker-compose -f stack/services.yaml logs -f --tail=1000 $(logargs)

## 	hooks:			Install all hooks for our repository
.PHONY : hooks
hooks:
  $(info >> Installing all hooks registered in the project)
@cp -frv ./docs/hooks/* .git/hooks/

## 	buildSecretsManager:	Build secrets into SecretsManager
.PHONY : buildSecretsManager
buildSecretsManager:
  $(info >> Running: buildSecretsManager)
@export AWS_ACCESS_KEY_ID=foo; export AWS_SECRET_ACCESS_KEY=foo; sbt "project transaction_manager; runMain com.letgo.hermes.transaction_manager.infrastructure.task.SecretsManagerEnvironmentBuilder"

## 	buildDynamo:		Build dynamodb environment
.PHONY : buildDynamo
buildDynamo:
  $(info >> Running: buildDynamo)
@export AWS_ACCESS_KEY_ID=foo; export AWS_SECRET_ACCESS_KEY=foo; sbt "project transaction_manager; runMain com.letgo.hermes.transaction_manager.infrastructure.task.DynamoEnvironmentBuilder; project payments; runMain com.letgo.hermes.payments.infrastructure.task.DynamoEnvironmentBuilder; project scheduler; runMain com.letgo.hermes.scheduler.infrastructure.task.DynamoEnvironmentBuilder"

## 	dropDynamo:		Drop dynamodb environment
.PHONY : dropDynamo
dropDynamo:
  $(info >> Running: dropDynamo)
@export AWS_ACCESS_KEY_ID=foo; export AWS_SECRET_ACCESS_KEY=foo; sbt "project transaction_manager; runMain com.letgo.hermes.transaction_manager.infrastructure.task.DynamoEnvironmentDropper; project payments; runMain com.letgo.hermes.payments.infrastructure.task.DynamoEnvironmentDropper; project scheduler; runMain com.letgo.hermes.scheduler.infrastructure.task.DynamoEnvironmentDropper"

# ---------------------------------------------------
# INTERNAL FUNCTIONS
# ---------------------------------------------------
.PHONY : .checkdeps
.checkdeps:
  $(info >> Checking if basic dependencies are met...)
$(if $(shell grep -i "kafka" "/etc/hosts"),, $(error File '/etc/hosts' should contain entry '127.0.0.1   kafka'))
$(foreach exec,$(EXECUTABLES),\
$(if $(shell which $(exec)),$(info $(exec) dependency satisfied),$(call deperr,$(exec))))
